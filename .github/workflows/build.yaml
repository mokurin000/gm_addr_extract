# Origin config by @Kilerd

name: Build Canary Version

on:
  push:
    branches: [ main ]

permissions:
  contents: write

jobs:
  release:
    name: Release on ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-x86_64, macos-arm64, linux-x86_64, linux-arm64, linux-riscv64, windows-x86_64, windows-arm64]
        include:
          - platform: macos-x86_64
            target: x86_64-apple-darwin
            os: macos-latest
            bin: gm_addr_extract
            
          - platform: macos-arm64
            target: aarch64-apple-darwin
            os: macos-latest
            bin: gm_addr_extract

          - platform: linux-x86_64
            target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
            bin: gm_addr_extract
            
          - platform: linux-arm64
            target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
            bin: gm_addr_extract

          - platform: linux-riscv64
            target: riscv64gc-unknown-linux-gnu
            os: ubuntu-latest
            bin: gm_addr_extract

          - platform: windows-x86_64
            target: x86_64-pc-windows-msvc
            os: windows-latest
            bin: gm_addr_extract.exe
            
          - platform: windows-arm64
            target: aarch64-pc-windows-msvc
            os: windows-latest
            bin: gm_addr_extract.exe
            
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # fix revision count

      - uses: Swatinem/rust-cache@v2
        with:
          prefix-key: ${{ matrix.target }}-main
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v0
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          args: "--locked --release --bin gm_addr_extract"
          strip: true

      - name: Prepare assets
        shell: bash
        run: |
          tar -cvzf ${{ matrix.target }}.tar.gz LICENSE target/${{ matrix.target }}/release/${{ matrix.bin }}
          
      - name: Declare some variables
        id: vars
        shell: bash
        run: |
          rev_count=$(git rev-list --count HEAD)
          echo rev_count=${rev_count} >> $GITHUB_OUTPUT

      - name: Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.target }}.tar.gz
          tag_name: r${{ steps.vars.outputs.rev_count }}
          prerelease: false
          make_latest: true